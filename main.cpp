/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */
/* USER CODE END Header */
/* Includes ------------------------------------------------------------------*/
#include "main.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include "edge-impulse-sdk/classifier/ei_run_classifier.h"

using namespace ei;

// paste the raw features here
static float features[] = {
		//Normal Sample
		//0x80808, 0x80808, 0x90909, 0x80808, 0x80808, 0x80808, 0x80808, 0x80808, 0x60606, 0x363636, 0x5c5c5c, 0x6f6f6f, 0x838383, 0x999999, 0x9e9e9e, 0x9c9c9c, 0xa4a4a4, 0xa6a6a6, 0x8e8e8e, 0x7b7b7b, 0x5f5f5f, 0x1d1d1d, 0xd0d0d, 0xe0e0e, 0xc0c0c, 0xb0b0b, 0xa0a0a, 0xa0a0a, 0xa0a0a, 0xa0a0a, 0xa0a0a, 0xa0a0a, 0xe0e0e, 0xe0e0e, 0x70707, 0xf0f0f, 0x101010, 0xf0f0f, 0xc0c0c, 0xb0b0b, 0x1a1a1a, 0x5c5c5c, 0x959595, 0xa1a1a1, 0xb6b6b6, 0xd0d0d0, 0xd3d3d3, 0xcbcbcb, 0xd0d0d0, 0xd3d3d3, 0xb4b4b4, 0x9f9f9f, 0x8f8f8f, 0x424242, 0xc0c0c, 0xf0f0f, 0x111111, 0x111111, 0xf0f0f, 0xe0e0e, 0xe0e0e, 0xd0d0d, 0xd0d0d, 0xd0d0d, 0xa0a0a, 0xd0d0d, 0x303030, 0x60606, 0x20202, 0x30303, 0xa0a0a, 0x232323, 0x383838, 0x5c5c5c, 0x959595, 0xa9a9a9, 0xbababa, 0xd1d1d1, 0xcecece, 0xbebebe, 0xc9c9c9, 0xd3d3d3, 0xb8b8b8, 0xacacac, 0x9a9a9a, 0x6a6a6a, 0x313131, 0x171717, 0xd0d0d, 0xd0d0d, 0xd0d0d, 0xd0d0d, 0xd0d0d, 0xd0d0d, 0xf0f0f, 0x101010, 0xb0b0b, 0x1e1e1e, 0x737373, 0x343434, 0x3a3a3a, 0x444444, 0x4a4a4a, 0x515151, 0x5f5f5f, 0x858585, 0xb4b4b4, 0xc8c8c8, 0xcfcfcf, 0xdcdcdc, 0xdadada, 0xc2c2c2, 0xcecece, 0xdddddd, 0xd0d0d0, 0xcecece, 0xb5b5b5, 0x808080, 0x5b5b5b, 0x444444, 0x303030, 0x1d1d1d, 0x171717, 0x161616, 0x121212, 0xe0e0e, 0xb0b0b, 0xa0a0a, 0x4d4d4d, 0x6f6f6f, 0x818181, 0x8e8e8e, 0x979797, 0x9e9e9e, 0xa7a7a7, 0xafafaf, 0xc0c0c0, 0xd8d8d8, 0xd6d6d6, 0xcdcdcd, 0xd2d2d2, 0xe3e3e3, 0xe7e7e7, 0xd2d2d2, 0xdbdbdb, 0xe4e4e4, 0xd9d9d9, 0xd0d0d0, 0xd9d9d9, 0xcccccc, 0xacacac, 0x9b9b9b, 0x979797, 0x929292, 0x909090, 0x828282, 0x707070, 0x646464, 0x4f4f4f, 0x343434, 0x8b8b8b, 0x909090, 0x959595, 0x9a9a9a, 0x999999, 0x919191, 0xa2a2a2, 0xbdbdbd, 0xd6d6d6, 0xc6c6c6, 0xa3a3a3, 0xababab, 0xc2c2c2, 0xe0e0e0, 0xe9e9e9, 0xe1e1e1, 0xececec, 0xe5e5e5, 0xcdcdcd, 0xb5b5b5, 0xb3b3b3, 0xd7d7d7, 0xe5e5e5, 0xd1d1d1, 0xc2c2c2, 0xb1b1b1, 0x979797, 0x909090, 0x949494, 0x919191, 0x8a8a8a, 0x7a7a7a, 0xbebebe, 0xbababa, 0xbbbbbb, 0xcacaca, 0xcbcbcb, 0xbebebe, 0xc9c9c9, 0xcacaca, 0x9b9b9b, 0x838383, 0x848484, 0x878787, 0xa2a2a2, 0xd4d4d4, 0xe3e3e3, 0xdcdcdc, 0xededed, 0xdadada, 0xacacac, 0x919191, 0x898989, 0x979797, 0xafafaf, 0xcfcfcf, 0xc9c9c9, 0xbababa, 0xa8a8a8, 0xb8b8b8, 0xc1c1c1, 0xafafaf, 0xababab, 0xafafaf, 0xc7c7c7, 0xd7d7d7, 0xe0e0e0, 0xdedede, 0xd7d7d7, 0xd1d1d1, 0xdfdfdf, 0xababab, 0x7c7c7c, 0x747474, 0x717171, 0x6d6d6d, 0x7d7d7d, 0xc2c2c2, 0xe9e9e9, 0xe4e4e4, 0xeeeeee, 0xb9b9b9, 0x7f7f7f, 0x767676, 0x6f6f6f, 0x767676, 0x838383, 0xababab, 0xe5e5e5, 0xcfcfcf, 0xcdcdcd, 0xd4d4d4, 0xdbdbdb, 0xdbdbdb, 0xd6d6d6, 0xcccccc, 0xcfcfcf, 0xd6d6d6, 0xe1e1e1, 0xcfcfcf, 0xcecece, 0xdadada, 0xc1c1c1, 0x9c9c9c, 0x838383, 0x717171, 0x6a6a6a, 0x777777, 0x7c7c7c, 0x9f9f9f, 0xe2e2e2, 0xededed, 0xe1e1e1, 0x969696, 0x838383, 0x7c7c7c, 0x747474, 0x747474, 0x838383, 0x9b9b9b, 0xc4c4c4, 0xdddddd, 0xcfcfcf, 0xcacaca, 0xd4d4d4, 0xe5e5e5, 0xdadada, 0xd0d0d0, 0xd2d2d2, 0xd9d9d9, 0xe0e0e0, 0xcdcdcd, 0xdcdcdc, 0xd5d5d5, 0x929292, 0x7b7b7b, 0x787878, 0x787878, 0x747474, 0x7f7f7f, 0x8f8f8f, 0xa1a1a1, 0xd8d8d8, 0xf1f1f1, 0xe2e2e2, 0x9b9b9b, 0x818181, 0x767676, 0x747474, 0x7a7a7a, 0x848484, 0x8e8e8e, 0x9a9a9a, 0xd1d1d1, 0xe2e2e2, 0xcacaca, 0xd0d0d0, 0xe4e4e4, 0xd7d7d7, 0xd6d6d6, 0xd5d5d5, 0xdadada, 0xdadada, 0xd0d0d0, 0xe4e4e4, 0xcbcbcb, 0x949494, 0x797979, 0x656565, 0x5d5d5d, 0x696969, 0x7e7e7e, 0x7f7f7f, 0x959595, 0xdbdbdb, 0xf6f6f6, 0xeaeaea, 0xa8a8a8, 0x838383, 0x888888, 0x828282, 0x737373, 0x6d6d6d, 0x7a7a7a, 0x949494, 0xc8c8c8, 0xeaeaea, 0xd3d3d3, 0xd2d2d2, 0xe1e1e1, 0xdbdbdb, 0xd7d7d7, 0xc4c4c4, 0xcfcfcf, 0xd9d9d9, 0xd7d7d7, 0xe2e2e2, 0xadadad, 0x8f8f8f, 0x838383, 0x797979, 0x727272, 0x6f6f6f, 0x8a8a8a, 0x9c9c9c, 0xaeaeae, 0xe3e3e3, 0xf6f6f6, 0xf4f4f4, 0xc2c2c2, 0x8c8c8c, 0x848484, 0x828282, 0x777777, 0x858585, 0x989898, 0xa1a1a1, 0xababab, 0xe1e1e1, 0xe1e1e1, 0xd2d2d2, 0xdfdfdf, 0xcccccc, 0xcccccc, 0xc6c6c6, 0xd1d1d1, 0xd7d7d7, 0xe0e0e0, 0xdddddd, 0xa0a0a0, 0x919191, 0x858585, 0x7c7c7c, 0x757575, 0x7b7b7b, 0x8e8e8e, 0x929292, 0xaeaeae, 0xe4e4e4, 0xf8f8f8, 0xf4f4f4, 0xcacaca, 0xa3a3a3, 0xa9a9a9, 0x8d8d8d, 0x7a7a7a, 0x818181, 0x868686, 0x949494, 0xababab, 0xe2e2e2, 0xe8e8e8, 0xd5d5d5, 0xdfdfdf, 0xcbcbcb, 0xc3c3c3, 0xc5c5c5, 0xc8c8c8, 0xdadada, 0xe4e4e4, 0xdfdfdf, 0xaeaeae, 0x828282, 0x757575, 0x787878, 0x777777, 0x828282, 0xa1a1a1, 0xa2a2a2, 0xbebebe, 0xeaeaea, 0xf6f6f6, 0xf6f6f6, 0xd5d5d5, 0xbcbcbc, 0xb7b7b7, 0x9b9b9b, 0x848484, 0x898989, 0x8e8e8e, 0x949494, 0xaaaaaa, 0xdddddd, 0xededed, 0xe0e0e0, 0xe1e1e1, 0xcdcdcd, 0xcbcbcb, 0x787878, 0x8f8f8f, 0xbfbfbf, 0xeaeaea, 0xb8b8b8, 0x9e9e9e, 0x9e9e9e, 0x8c8c8c, 0x787878, 0x6e6e6e, 0x6f6f6f, 0xa1a1a1, 0xaaaaaa, 0xc8c8c8, 0xeeeeee, 0xf7f7f7, 0xf6f6f6, 0xd4d4d4, 0xb3b3b3, 0xababab, 0xa5a5a5, 0x7e7e7e, 0x7a7a7a, 0x888888, 0xa5a5a5, 0xb7b7b7, 0xcccccc, 0xf1f1f1, 0xe0e0e0, 0xbdbdbd, 0xa0a0a0, 0x898989, 0x505050, 0x7f7f7f, 0xb0b0b0, 0xe1e1e1, 0xc5c5c5, 0x919191, 0x787878, 0x747474, 0x757575, 0x797979, 0x919191, 0xb5b5b5, 0xb0b0b0, 0xdadada, 0xededed, 0xf4f4f4, 0xf6f6f6, 0xd7d7d7, 0xc3c3c3, 0xa7a7a7, 0xaaaaaa, 0x9a9a9a, 0x929292, 0x989898, 0x919191, 0x989898, 0xcecece, 0xf2f2f2, 0xc6c6c6, 0x939393, 0x6f6f6f, 0x343434, 0x4e4e4e, 0x868686, 0xb9b9b9, 0xd8d8d8, 0xa3a3a3, 0x858585, 0x7d7d7d, 0x808080, 0x828282, 0x828282, 0xa4a4a4, 0xa3a3a3, 0xb6b6b6, 0xe1e1e1, 0xefefef, 0xf7f7f7, 0xf8f8f8, 0xdbdbdb, 0xc9c9c9, 0xa1a1a1, 0x8d8d8d, 0x909090, 0x868686, 0x878787, 0x9b9b9b, 0xb0b0b0, 0xc3c3c3, 0xe5e5e5, 0xc3c3c3, 0x969696, 0x6c6c6c, 0x232323, 0x444444, 0x898989, 0xbdbdbd, 0xd0d0d0, 0x919191, 0x939393, 0x808080, 0x717171, 0x6a6a6a, 0x727272, 0x9d9d9d, 0x8f8f8f, 0xbfbfbf, 0xe5e5e5, 0xefefef, 0xf6f6f6, 0xf8f8f8, 0xe0e0e0, 0xd9d9d9, 0xcdcdcd, 0xa0a0a0, 0x919191, 0x8f8f8f, 0x838383, 0x848484, 0x9a9a9a, 0xbfbfbf, 0xe7e7e7, 0xc5c5c5, 0x9c9c9c, 0x5d5d5d, 0x161616, 0x373737, 0x888888, 0xb4b4b4, 0xd9d9d9, 0x909090, 0x5b5b5b, 0x636363, 0x767676, 0x838383, 0x909090, 0x9c9c9c, 0xa2a2a2, 0xd0d0d0, 0xe8e8e8, 0xf3f3f3, 0xf6f6f6, 0xf9f9f9, 0xe0e0e0, 0xd7d7d7, 0xd8d8d8, 0xbebebe, 0x878787, 0x929292, 0x929292, 0x979797, 0x919191, 0xaaaaaa, 0xe2e2e2, 0xc3c3c3, 0x989898, 0x444444, 0x131313, 0x292929, 0x7f7f7f, 0xbfbfbf, 0xb8b8b8, 0x7f7f7f, 0x7a7a7a, 0x6d6d6d, 0x717171, 0x808080, 0x797979, 0x868686, 0x9e9e9e, 0xc4c4c4, 0xdfdfdf, 0xf0f0f0, 0xf6f6f6, 0xf9f9f9, 0xdfdfdf, 0xd5d5d5, 0xdadada, 0xd1d1d1, 0x898989, 0x7d7d7d, 0x7b7b7b, 0x6f6f6f, 0x8a8a8a, 0xb1b1b1, 0xd8d8d8, 0xc8c8c8, 0x8a8a8a, 0x2d2d2d, 0x161616, 0x1d1d1d, 0x787878, 0xc2c2c2, 0xb2b2b2, 0x7b7b7b, 0x737373, 0x656565, 0x6c6c6c, 0x6e6e6e, 0x727272, 0x808080, 0x9c9c9c, 0xcacaca, 0xdadada, 0xededed, 0xf2f2f2, 0xfbfbfb, 0xdedede, 0xd7d7d7, 0xdedede, 0xd9d9d9, 0xa1a1a1, 0x7b7b7b, 0x919191, 0x868686, 0x797979, 0x797979, 0xc9c9c9, 0xcbcbcb, 0x7a7a7a, 0x1d1d1d, 0x181818, 0x141414, 0x6f6f6f, 0xc2c2c2, 0xa3a3a3, 0x595959, 0x555555, 0x6e6e6e, 0x737373, 0x717171, 0x747474, 0x858585, 0x989898, 0xc7c7c7, 0xd8d8d8, 0xeaeaea, 0xececec, 0xfafafa, 0xdedede, 0xd0d0d0, 0xd1d1d1, 0xc8c8c8, 0x8b8b8b, 0x707070, 0x797979, 0x929292, 0x878787, 0x7d7d7d, 0xb2b2b2, 0xcecece, 0x6c6c6c, 0x151515, 0x1a1a1a, 0x101010, 0x666666, 0xb6b6b6, 0x7b7b7b, 0x757575, 0x6c6c6c, 0x686868, 0x6c6c6c, 0x7d7d7d, 0x979797, 0xababab, 0xc3c3c3, 0xd5d5d5, 0xdbdbdb, 0xe8e8e8, 0xe7e7e7, 0xf8f8f8, 0xdddddd, 0xcbcbcb, 0xd1d1d1, 0xcacaca, 0xa6a6a6, 0x939393, 0x7c7c7c, 0x696969, 0x6f6f6f, 0x8a8a8a, 0xb7b7b7, 0xc6c6c6, 0x5f5f5f, 0x121212, 0x1b1b1b, 0xc0c0c, 0x616161, 0xafafaf, 0x7c7c7c, 0x757575, 0x757575, 0x8d8d8d, 0xa9a9a9, 0xbebebe, 0xd0d0d0, 0xd9d9d9, 0xdddddd, 0xdadada, 0xdedede, 0xf1f1f1, 0xebebeb, 0xfafafa, 0xe6e6e6, 0xdbdbdb, 0xdbdbdb, 0xcccccc, 0xb8b8b8, 0xafafaf, 0xc3c3c3, 0xafafaf, 0x7f7f7f, 0x747474, 0x969696, 0xc3c3c3, 0x545454, 0xf0f0f, 0x1b1b1b, 0xb0b0b, 0x525252, 0xb5b5b5, 0x6c6c6c, 0x7b7b7b, 0xbebebe, 0xcccccc, 0xd7d7d7, 0xe1e1e1, 0xe3e3e3, 0xe1e1e1, 0xdadada, 0xd3d3d3, 0xdedede, 0xf0f0f0, 0xf0f0f0, 0xf8f8f8, 0xebebeb, 0xdedede, 0xd5d5d5, 0xc4c4c4, 0xc1c1c1, 0xc5c5c5, 0xd7d7d7, 0xe4e4e4, 0xd3d3d3, 0x919191, 0x7a7a7a, 0xbababa, 0x474747, 0xe0e0e, 0x1b1b1b, 0xa0a0a, 0x454545, 0x9e9e9e, 0x818181, 0xc1c1c1, 0xd9d9d9, 0xe2e2e2, 0xe6e6e6, 0xe5e5e5, 0xe5e5e5, 0xe5e5e5, 0xe0e0e0, 0xd9d9d9, 0xe0e0e0, 0xf4f4f4, 0xf3f3f3, 0xf9f9f9, 0xeeeeee, 0xdcdcdc, 0xdedede, 0xdfdfdf, 0xe6e6e6, 0xe9e9e9, 0xe4e4e4, 0xe0e0e0, 0xe0e0e0, 0xd2d2d2, 0x9a9a9a, 0xaaaaaa, 0x3b3b3b, 0xf0f0f, 0x1a1a1a, 0xa0a0a, 0x383838, 0x999999, 0xb4b4b4, 0xd8d8d8, 0xe0e0e0, 0xe4e4e4, 0xe6e6e6, 0xe8e8e8, 0xececec, 0xececec, 0xe6e6e6, 0xdadada, 0xe2e2e2, 0xf6f6f6, 0xf2f2f2, 0xf4f4f4, 0xefefef, 0xe3e3e3, 0xe8e8e8, 0xebebeb, 0xefefef, 0xeeeeee, 0xebebeb, 0xe9e9e9, 0xdfdfdf, 0xdadada, 0xcecece, 0xa6a6a6, 0x2d2d2d, 0x131313, 0x191919, 0xc0c0c, 0x282828, 0xa3a3a3, 0xc5c5c5, 0xd7d7d7, 0xe0e0e0, 0xe6e6e6, 0xeaeaea, 0xeeeeee, 0xeeeeee, 0xebebeb, 0xe9e9e9, 0xe1e1e1, 0xe2e2e2, 0xf4f4f4, 0xf2f2f2, 0xf2f2f2, 0xf0f0f0, 0xe8e8e8, 0xebebeb, 0xededed, 0xededed, 0xededed, 0xf0f0f0, 0xececec, 0xe5e5e5, 0xd5d5d5, 0xd2d2d2, 0xa2a2a2, 0x212121, 0x151515, 0x191919, 0x101010, 0x1a1a1a, 0x929292, 0xcbcbcb, 0xd0d0d0, 0xe0e0e0, 0xe6e6e6, 0xececec, 0xececec, 0xeaeaea, 0xececec, 0xededed, 0xececec, 0xececec, 0xf8f8f8, 0xefefef, 0xf0f0f0, 0xf4f4f4, 0xededed, 0xececec, 0xeeeeee, 0xefefef, 0xededed, 0xebebeb, 0xececec, 0xe6e6e6, 0xd7d7d7, 0xcbcbcb, 0x878787, 0x171717, 0x171717, 0x191919, 0x121212, 0xf0f0f, 0x757575, 0xbfbfbf, 0xcecece, 0xe0e0e0, 0xeaeaea, 0xeaeaea, 0xe9e9e9, 0xececec, 0xefefef, 0xf0f0f0, 0xe9e9e9, 0xe9e9e9, 0xf2f2f2, 0xececec, 0xececec, 0xececec, 0xe8e8e8, 0xe9e9e9, 0xededed, 0xebebeb, 0xe5e5e5, 0xe7e7e7, 0xe4e4e4, 0xe3e3e3, 0xd2d2d2, 0xc0c0c0, 0x606060, 0x101010, 0x191919, 0x181818, 0x121212, 0xb0b0b, 0x494949, 0xa7a7a7, 0xc6c6c6, 0xdedede, 0xe7e7e7, 0xeaeaea, 0xefefef, 0xf4f4f4, 0xf6f6f6, 0xf5f5f5, 0xf2f2f2, 0xf0f0f0, 0xf8f8f8, 0xfafafa, 0xf9f9f9, 0xf7f7f7, 0xf0f0f0, 0xf5f5f5, 0xf7f7f7, 0xf8f8f8, 0xededed, 0xefefef, 0xededed, 0xe7e7e7, 0xd9d9d9, 0xadadad, 0x3b3b3b, 0x141414, 0x1b1b1b, 0x1a1a1a, 0x121212, 0xc0c0c, 0x232323, 0x858585, 0xb7b7b7, 0xcdcdcd, 0xd0d0d0, 0xd4d4d4, 0xd7d7d7, 0xd7d7d7, 0xd4d4d4, 0xcdcdcd, 0xcbcbcb, 0xc8c8c8, 0xcdcdcd, 0xc5c5c5, 0xc1c1c1, 0xc3c3c3, 0xb8b8b8, 0xb6b6b6, 0xb4b4b4, 0xb0b0b0, 0xa7a7a7, 0x969696, 0x989898, 0x909090, 0x838383, 0x5b5b5b, 0x151515, 0xe0e0e, 0xf0f0f, 0xf0f0f
		//Pneumonia
		0x585858, 0x575757, 0x4d4d4d, 0x434343, 0x484848, 0x4d4d4d, 0x676767, 0x6b6b6b, 0x565656, 0x616161, 0x696969, 0x767676, 0x878787, 0x959595, 0x808080, 0x696969, 0x676767, 0x747474, 0x878787, 0x898989, 0x767676, 0x6d6d6d, 0x666666, 0x666666, 0x656565, 0x656565, 0x636363, 0x5b5b5b, 0x707070, 0x8b8b8b, 0x7a7a7a, 0x5b5b5b, 0x7e7e7e, 0x757575, 0x5f5f5f, 0x595959, 0x676767, 0x707070, 0x838383, 0x818181, 0x737373, 0x676767, 0x626262, 0x676767, 0x7b7b7b, 0x868686, 0x848484, 0x838383, 0x7f7f7f, 0x858585, 0x898989, 0x898989, 0x797979, 0x787878, 0x737373, 0x757575, 0x757575, 0x6e6e6e, 0x696969, 0x6f6f6f, 0x7d7d7d, 0x656565, 0x464646, 0x373737, 0x8b8b8b, 0x828282, 0x7a7a7a, 0x898989, 0x838383, 0x777777, 0x7d7d7d, 0x838383, 0x757575, 0x707070, 0x777777, 0x7a7a7a, 0x888888, 0x7b7b7b, 0x767676, 0x7d7d7d, 0x828282, 0x909090, 0x8c8c8c, 0x7e7e7e, 0x797979, 0x727272, 0x6f6f6f, 0x747474, 0x7f7f7f, 0x848484, 0x737373, 0x636363, 0x525252, 0x474747, 0x404040, 0x3f3f3f, 0x7d7d7d, 0x727272, 0x7b7b7b, 0x838383, 0x6f6f6f, 0x6f6f6f, 0x676767, 0x646464, 0x5c5c5c, 0x5b5b5b, 0x646464, 0x707070, 0x8b8b8b, 0x8e8e8e, 0x777777, 0x6c6c6c, 0x727272, 0x8b8b8b, 0x959595, 0x8e8e8e, 0x888888, 0x818181, 0x767676, 0x6b6b6b, 0x5e5e5e, 0x666666, 0x7f7f7f, 0x626262, 0x505050, 0x484848, 0x444444, 0x434343, 0x797979, 0x707070, 0x777777, 0x878787, 0x7a7a7a, 0x757575, 0x6c6c6c, 0x636363, 0x5e5e5e, 0x5a5a5a, 0x5b5b5b, 0x646464, 0x7d7d7d, 0x8c8c8c, 0x8d8d8d, 0x8c8c8c, 0x909090, 0x9c9c9c, 0x9a9a9a, 0x8f8f8f, 0x888888, 0x7b7b7b, 0x6e6e6e, 0x5f5f5f, 0x5c5c5c, 0x616161, 0x8c8c8c, 0x8a8a8a, 0x5d5d5d, 0x5c5c5c, 0x585858, 0x555555, 0x707070, 0x747474, 0x7f7f7f, 0x8e8e8e, 0x898989, 0x787878, 0x676767, 0x656565, 0x646464, 0x676767, 0x6c6c6c, 0x727272, 0x818181, 0x777777, 0x868686, 0x8f8f8f, 0x9c9c9c, 0xa0a0a0, 0x909090, 0x7e7e7e, 0x757575, 0x6c6c6c, 0x606060, 0x494949, 0x4a4a4a, 0x565656, 0x727272, 0x969696, 0x787878, 0x676767, 0x686868, 0x6e6e6e, 0x727272, 0x888888, 0x787878, 0x6c6c6c, 0x717171, 0x757575, 0x696969, 0x646464, 0x606060, 0x5f5f5f, 0x656565, 0x6f6f6f, 0x8b8b8b, 0x7b7b7b, 0x6d6d6d, 0x757575, 0x868686, 0x9a9a9a, 0x959595, 0x8c8c8c, 0x808080, 0x797979, 0x676767, 0x4c4c4c, 0x484848, 0x454545, 0x484848, 0x646464, 0x7b7b7b, 0x666666, 0x595959, 0x616161, 0x838383, 0x858585, 0x686868, 0x666666, 0x626262, 0x606060, 0x626262, 0x636363, 0x606060, 0x5e5e5e, 0x585858, 0x626262, 0x838383, 0x8a8a8a, 0x888888, 0x8a8a8a, 0x919191, 0x9c9c9c, 0x979797, 0x959595, 0x878787, 0x7b7b7b, 0x6f6f6f, 0x585858, 0x575757, 0x595959, 0x505050, 0x4a4a4a, 0x636363, 0x898989, 0x656565, 0x616161, 0x828282, 0x8e8e8e, 0x767676, 0x717171, 0x6b6b6b, 0x626262, 0x616161, 0x656565, 0x646464, 0x656565, 0x626262, 0x676767, 0x787878, 0x888888, 0x939393, 0x999999, 0x9b9b9b, 0x8f8f8f, 0x868686, 0x8a8a8a, 0x818181, 0x777777, 0x707070, 0x5c5c5c, 0x444444, 0x565656, 0x5b5b5b, 0x585858, 0x595959, 0x8f8f8f, 0x818181, 0x616161, 0x898989, 0x959595, 0x838383, 0x6f6f6f, 0x5c5c5c, 0x565656, 0x585858, 0x5a5a5a, 0x5c5c5c, 0x676767, 0x717171, 0x818181, 0x878787, 0x7c7c7c, 0x7d7d7d, 0x868686, 0x919191, 0x929292, 0x919191, 0x959595, 0x8e8e8e, 0x868686, 0x7c7c7c, 0x737373, 0x535353, 0x454545, 0x4a4a4a, 0x515151, 0x5c5c5c, 0x737373, 0x747474, 0x676767, 0x929292, 0x707070, 0x707070, 0x6d6d6d, 0x5e5e5e, 0x575757, 0x585858, 0x5a5a5a, 0x575757, 0x5b5b5b, 0x686868, 0x808080, 0x9c9c9c, 0x8f8f8f, 0x8d8d8d, 0x929292, 0x9c9c9c, 0xa6a6a6, 0x9b9b9b, 0x989898, 0x939393, 0x8c8c8c, 0x888888, 0x868686, 0x7c7c7c, 0x5f5f5f, 0x545454, 0x4b4b4b, 0x474747, 0x6a6a6a, 0x808080, 0x6d6d6d, 0x838383, 0x5f5f5f, 0x626262, 0x6b6b6b, 0x696969, 0x636363, 0x606060, 0x5f5f5f, 0x606060, 0x636363, 0x666666, 0x7a7a7a, 0x969696, 0x9b9b9b, 0xa7a7a7, 0xadadad, 0xa5a5a5, 0x9d9d9d, 0x999999, 0x939393, 0x888888, 0x838383, 0x838383, 0x818181, 0x828282, 0x7d7d7d, 0x666666, 0x626262, 0x545454, 0x616161, 0x9d9d9d, 0x858585, 0x8b8b8b, 0x727272, 0x6b6b6b, 0x646464, 0x646464, 0x646464, 0x666666, 0x707070, 0x797979, 0x797979, 0x737373, 0x898989, 0x8e8e8e, 0x909090, 0x9d9d9d, 0xa2a2a2, 0xa0a0a0, 0x9a9a9a, 0x989898, 0x9a9a9a, 0x939393, 0x8c8c8c, 0x888888, 0x858585, 0x808080, 0x797979, 0x636363, 0x575757, 0x656565, 0x707070, 0x959595, 0x969696, 0x979797, 0x6b6b6b, 0x565656, 0x545454, 0x545454, 0x585858, 0x5c5c5c, 0x6b6b6b, 0x777777, 0x7b7b7b, 0x7d7d7d, 0x969696, 0x9d9d9d, 0x929292, 0x989898, 0x9b9b9b, 0xa8a8a8, 0xaaaaaa, 0xa2a2a2, 0x9e9e9e, 0x999999, 0x939393, 0x8e8e8e, 0x8b8b8b, 0x898989, 0x858585, 0x777777, 0x5b5b5b, 0x555555, 0x6c6c6c, 0x8a8a8a, 0x898989, 0x727272, 0x696969, 0x606060, 0x595959, 0x545454, 0x525252, 0x5b5b5b, 0x646464, 0x666666, 0x6c6c6c, 0x787878, 0x959595, 0xa3a3a3, 0xa6a6a6, 0xaeaeae, 0xb1b1b1, 0xaeaeae, 0xa9a9a9, 0x9f9f9f, 0x969696, 0x898989, 0x868686, 0x878787, 0x868686, 0x848484, 0x858585, 0x878787, 0x818181, 0x656565, 0x515151, 0x6c6c6c, 0x969696, 0x565656, 0x676767, 0x6c6c6c, 0x6c6c6c, 0x6a6a6a, 0x606060, 0x6a6a6a, 0x6f6f6f, 0x717171, 0x737373, 0x7e7e7e, 0x919191, 0x999999, 0xa4a4a4, 0xadadad, 0xaeaeae, 0xa7a7a7, 0xa1a1a1, 0x999999, 0x969696, 0x8d8d8d, 0x8a8a8a, 0x8b8b8b, 0x898989, 0x828282, 0x7c7c7c, 0x797979, 0x7c7c7c, 0x838383, 0x707070, 0x5d5d5d, 0x8f8f8f, 0x676767, 0x646464, 0x696969, 0x696969, 0x666666, 0x686868, 0x696969, 0x696969, 0x6f6f6f, 0x7a7a7a, 0x8a8a8a, 0x9e9e9e, 0x999999, 0x979797, 0x9e9e9e, 0x9d9d9d, 0xa5a5a5, 0xa7a7a7, 0xa4a4a4, 0xa4a4a4, 0x9c9c9c, 0x949494, 0x969696, 0x949494, 0x8f8f8f, 0x898989, 0x808080, 0x737373, 0x757575, 0x7c7c7c, 0x7c7c7c, 0x8f8f8f, 0x565656, 0x4b4b4b, 0x515151, 0x595959, 0x5e5e5e, 0x5d5d5d, 0x5d5d5d, 0x585858, 0x5c5c5c, 0x6f6f6f, 0x8b8b8b, 0xa2a2a2, 0xa5a5a5, 0xa7a7a7, 0xababab, 0xacacac, 0xb3b3b3, 0xaeaeae, 0xa8a8a8, 0xa0a0a0, 0x959595, 0x8e8e8e, 0x8d8d8d, 0x909090, 0x919191, 0x919191, 0x909090, 0x898989, 0x7a7a7a, 0x6f6f6f, 0x747474, 0x919191, 0x515151, 0x484848, 0x494949, 0x545454, 0x5d5d5d, 0x5b5b5b, 0x5f5f5f, 0x5c5c5c, 0x616161, 0x686868, 0x7d7d7d, 0x949494, 0xa1a1a1, 0xadadad, 0xb1b1b1, 0xb5b5b5, 0xafafaf, 0xa8a8a8, 0xa2a2a2, 0x999999, 0x929292, 0x909090, 0x8a8a8a, 0x8b8b8b, 0x8b8b8b, 0x888888, 0x858585, 0x888888, 0x8b8b8b, 0x7f7f7f, 0x676767, 0x707070, 0x5f5f5f, 0x5f5f5f, 0x5f5f5f, 0x696969, 0x656565, 0x616161, 0x616161, 0x676767, 0x696969, 0x6e6e6e, 0x787878, 0x929292, 0x999999, 0x9e9e9e, 0xa5a5a5, 0xa5a5a5, 0xa5a5a5, 0xa3a3a3, 0x9d9d9d, 0x9f9f9f, 0xa0a0a0, 0x9d9d9d, 0x989898, 0x929292, 0x919191, 0x8a8a8a, 0x838383, 0x7d7d7d, 0x7a7a7a, 0x818181, 0x868686, 0x626262, 0x707070, 0x6a6a6a, 0x646464, 0x575757, 0x525252, 0x4b4b4b, 0x4d4d4d, 0x505050, 0x545454, 0x696969, 0x818181, 0x9d9d9d, 0xa0a0a0, 0x9e9e9e, 0xa7a7a7, 0xa7a7a7, 0xafafaf, 0xadadad, 0xa3a3a3, 0x9f9f9f, 0x9a9a9a, 0x9a9a9a, 0x999999, 0x989898, 0x9a9a9a, 0x969696, 0x909090, 0x868686, 0x7a7a7a, 0x6e6e6e, 0x7b7b7b, 0x828282, 0x565656, 0x595959, 0x545454, 0x535353, 0x4d4d4d, 0x464646, 0x4c4c4c, 0x494949, 0x4d4d4d, 0x5d5d5d, 0x7a7a7a, 0x929292, 0xa3a3a3, 0xacacac, 0xb0b0b0, 0xb4b4b4, 0xb2b2b2, 0xacacac, 0xa3a3a3, 0x999999, 0x939393, 0x939393, 0x919191, 0x8f8f8f, 0x8e8e8e, 0x8f8f8f, 0x8f8f8f, 0x909090, 0x8a8a8a, 0x7a7a7a, 0x656565, 0x757575, 0x474747, 0x515151, 0x5b5b5b, 0x626262, 0x595959, 0x5b5b5b, 0x636363, 0x666666, 0x6f6f6f, 0x717171, 0x767676, 0x8a8a8a, 0x9a9a9a, 0xa6a6a6, 0xacacac, 0xacacac, 0xa7a7a7, 0xa0a0a0, 0x9c9c9c, 0x9c9c9c, 0x979797, 0x929292, 0x8f8f8f, 0x8e8e8e, 0x8c8c8c, 0x868686, 0x818181, 0x7e7e7e, 0x848484, 0x888888, 0x7c7c7c, 0x5e5e5e, 0x626262, 0x777777, 0x868686, 0x858585, 0x828282, 0x848484, 0x838383, 0x848484, 0x878787, 0x868686, 0x878787, 0x9c9c9c, 0xa3a3a3, 0xa2a2a2, 0xa8a8a8, 0xa5a5a5, 0xa6a6a6, 0xa8a8a8, 0x9d9d9d, 0x9e9e9e, 0x9f9f9f, 0x9a9a9a, 0x959595, 0x959595, 0x959595, 0x8b8b8b, 0x818181, 0x787878, 0x717171, 0x717171, 0x808080, 0x7a7a7a, 0x8b8b8b, 0x8b8b8b, 0x898989, 0x858585, 0x868686, 0x878787, 0x868686, 0x868686, 0x878787, 0x8f8f8f, 0x9a9a9a, 0xacacac, 0xaeaeae, 0xababab, 0xb0b0b0, 0xb1b1b1, 0xb2b2b2, 0xb3b3b3, 0xa4a4a4, 0x8f8f8f, 0x8a8a8a, 0x8e8e8e, 0x8b8b8b, 0x8b8b8b, 0x969696, 0x979797, 0x8e8e8e, 0x818181, 0x707070, 0x646464, 0x5f5f5f, 0x707070, 0x828282, 0x848484, 0x888888, 0x8a8a8a, 0x8f8f8f, 0x949494, 0x969696, 0x959595, 0x929292, 0x949494, 0x969696, 0xa1a1a1, 0xa7a7a7, 0xaeaeae, 0xb1b1b1, 0xb3b3b3, 0xaaaaaa, 0xa8a8a8, 0x9c9c9c, 0x898989, 0x838383, 0x888888, 0x868686, 0x7e7e7e, 0x838383, 0x858585, 0x828282, 0x868686, 0x7f7f7f, 0x6c6c6c, 0x525252, 0x474747, 0x878787, 0x8a8a8a, 0x909090, 0x969696, 0x9b9b9b, 0x9f9f9f, 0xa0a0a0, 0xa1a1a1, 0xa3a3a3, 0xa0a0a0, 0x979797, 0x9e9e9e, 0xa3a3a3, 0xa5a5a5, 0xa9a9a9, 0xa9a9a9, 0xa4a4a4, 0xa0a0a0, 0x9c9c9c, 0x969696, 0x929292, 0x909090, 0x8e8e8e, 0x858585, 0x868686, 0x868686, 0x7f7f7f, 0x7b7b7b, 0x7b7b7b, 0x727272, 0x575757, 0x454545, 0x8e8e8e, 0x979797, 0x9d9d9d, 0xa2a2a2, 0xa4a4a4, 0xa3a3a3, 0xa4a4a4, 0xa5a5a5, 0xa4a4a4, 0xa3a3a3, 0xa1a1a1, 0xacacac, 0xb0b0b0, 0xababab, 0xb0b0b0, 0xb0b0b0, 0xb2b2b2, 0xadadad, 0xa4a4a4, 0x9c9c9c, 0x9b9b9b, 0x9c9c9c, 0x9c9c9c, 0x999999, 0x969696, 0x939393, 0x8e8e8e, 0x8a8a8a, 0x848484, 0x737373, 0x666666, 0x5f5f5f, 0x9b9b9b, 0x9d9d9d, 0x9d9d9d, 0x9d9d9d, 0x9c9c9c, 0x9e9e9e, 0x9f9f9f, 0xa0a0a0, 0x9f9f9f, 0xa2a2a2, 0xa6a6a6, 0xb0b0b0, 0xb4b4b4, 0xb2b2b2, 0xb3b3b3, 0xb5b5b5, 0xb5b5b5, 0xb1b1b1, 0xa7a7a7, 0x979797, 0x909090, 0x939393, 0x979797, 0x9a9a9a, 0x9b9b9b, 0x9d9d9d, 0x9b9b9b, 0x959595, 0x8e8e8e, 0x868686, 0x747474, 0x6a6a6a, 0x939393, 0x959595, 0x989898, 0x9a9a9a, 0x9c9c9c, 0x9f9f9f, 0xa0a0a0, 0xa0a0a0, 0xa1a1a1, 0xa2a2a2, 0xa1a1a1, 0xa8a8a8, 0xacacac, 0xb0b0b0, 0xb0b0b0, 0xb0b0b0, 0xadadad, 0xa6a6a6, 0x9f9f9f, 0x969696, 0x929292, 0x949494, 0x979797, 0x979797, 0x949494, 0x989898, 0x9d9d9d, 0xa0a0a0, 0x9b9b9b, 0x929292, 0x878787, 0x777777, 0x919191, 0x959595, 0x989898, 0x9b9b9b, 0x9c9c9c, 0x9f9f9f, 0xa2a2a2, 0xa5a5a5, 0xa7a7a7, 0xa9a9a9, 0xa3a3a3, 0xaaaaaa, 0xaeaeae, 0xa9a9a9, 0xababab, 0xaaaaaa, 0xaeaeae, 0xa9a9a9, 0xa0a0a0, 0x9e9e9e, 0x989898, 0x969696, 0x999999, 0x9b9b9b, 0x999999, 0x999999, 0x999999, 0x999999, 0x9d9d9d, 0x9f9f9f, 0x989898, 0x898989, 0x929292, 0x959595, 0x989898, 0x9c9c9c, 0xa0a0a0, 0xa4a4a4, 0xa6a6a6, 0xa5a5a5, 0xa5a5a5, 0xa6a6a6, 0xa8a8a8, 0xb2b2b2, 0xb5b5b5, 0xafafaf, 0xb0b0b0, 0xb3b3b3, 0xb9b9b9, 0xb5b5b5, 0xa5a5a5, 0x9c9c9c, 0x9e9e9e, 0xa0a0a0, 0x9e9e9e, 0x9d9d9d, 0x9b9b9b, 0x9a9a9a, 0x9b9b9b, 0x979797, 0x969696, 0x979797, 0x9b9b9b, 0x979797

	};

int get_feature_data(size_t offset, size_t length, float *out_ptr) {
	memcpy(out_ptr, features + offset, length * sizeof(float));
	return 0;

}
/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/
CRC_HandleTypeDef hcrc;

UART_HandleTypeDef huart2;

/* USER CODE BEGIN PV */

/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_USART2_UART_Init(void);
static void MX_CRC_Init(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
#include <stdarg.h>
//#include "edge-impulse-sdk/classifier/ei_run_classifier.h"

void vprint(const char *fmt, va_list argp)
{
    char string[200];
    if(0 < vsprintf(string, fmt, argp)) // build string
    {
        HAL_UART_Transmit(&huart2, (uint8_t*)string, strlen(string), 0xffffff); // send message via UART
    }
}

void ei_printf(const char *format, ...) {
    va_list myargs;
    va_start(myargs, format);
    vprint(format, myargs);
    va_end(myargs);
}
/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_USART2_UART_Init();
  MX_CRC_Init();
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	  signal_t signal;
	  signal.total_length = sizeof(features) / sizeof(features[0]);
	  signal.get_data = &get_feature_data;
	  ei_impulse_result_t result = { 0 };
	        EI_IMPULSE_ERROR res = run_classifier(&signal, &result, false);
	        ei_printf("run_classifier returned: %d\n", res);
	        ei_printf("Predictions (DSP: %d ms., Classification: %d ms., Anomaly: %d ms.): \n",
	            result.timing.dsp, result.timing.classification, result.timing.anomaly);

	        // print the predictions
	        ei_printf("[");
	        for (size_t ix = 0; ix < EI_CLASSIFIER_LABEL_COUNT; ix++) {
	            ei_printf_float(result.classification[ix].value);

	    #if EI_CLASSIFIER_HAS_ANOMALY == 1
	            ei_printf(", ");
	    #else
	            if (ix != EI_CLASSIFIER_LABEL_COUNT - 1) {
	                ei_printf(", ");
	            }
	    #endif
	        }
	    #if EI_CLASSIFIER_HAS_ANOMALY == 1
	        ei_printf_float(result.anomaly);
	    #endif
	        ei_printf("]\n");

        if ((result.classification[1].value > result.classification[0].value))
	        ei_printf("This is Pneumonia lung\n");
        else if ((result.classification[0].value > result.classification[1].value))
       	    ei_printf("This is normal lung\n");
        else
        	ei_printf("This is uncertain\n");
	    HAL_Delay(5000);
    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLM = 16;
  RCC_OscInitStruct.PLL.PLLN = 336;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
  RCC_OscInitStruct.PLL.PLLQ = 2;
  RCC_OscInitStruct.PLL.PLLR = 2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{

  /* USER CODE BEGIN CRC_Init 0 */

  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}

/**
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{

  /* USER CODE BEGIN USART2_Init 0 */

  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
  huart2.Init.BaudRate = 115200;
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
  huart2.Init.StopBits = UART_STOPBITS_1;
  huart2.Init.Parity = UART_PARITY_NONE;
  huart2.Init.Mode = UART_MODE_TX_RX;
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  if (HAL_UART_Init(&huart2) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);

}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
